{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "The AWS CloudFormation template for this Serverless application",
  "Resources": {
    "ServerlessDeploymentBucket": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "AES256"
              }
            }
          ]
        }
      }
    },
    "ServerlessDeploymentBucketPolicy": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": {
          "Ref": "ServerlessDeploymentBucket"
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:*",
              "Effect": "Deny",
              "Principal": "*",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":s3:::",
                      {
                        "Ref": "ServerlessDeploymentBucket"
                      },
                      "/*"
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":s3:::",
                      {
                        "Ref": "ServerlessDeploymentBucket"
                      }
                    ]
                  ]
                }
              ],
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": false
                }
              }
            }
          ]
        }
      }
    },
    "AppointmentLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/agendamiento-medico-rimac-dev-appointment"
      }
    },
    "AppointmentUnderscorepeLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/agendamiento-medico-rimac-dev-appointment_pe"
      }
    },
    "AppointmentUnderscoreclLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/agendamiento-medico-rimac-dev-appointment_cl"
      }
    },
    "IamRoleLambdaExecution": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "Policies": [
          {
            "PolicyName": {
              "Fn::Join": [
                "-",
                [
                  "agendamiento-medico-rimac",
                  "dev",
                  "lambda"
                ]
              ]
            },
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:CreateLogStream",
                    "logs:CreateLogGroup",
                    "logs:TagResource"
                  ],
                  "Resource": [
                    {
                      "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/agendamiento-medico-rimac-dev*:*"
                    }
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:PutLogEvents"
                  ],
                  "Resource": [
                    {
                      "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/agendamiento-medico-rimac-dev*:*:*"
                    }
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "dynamodb:PutItem",
                    "dynamodb:GetItem",
                    "dynamodb:Query",
                    "dynamodb:UpdateItem"
                  ],
                  "Resource": [
                    {
                      "Fn::GetAtt": [
                        "AppointmentsTable",
                        "Arn"
                      ]
                    },
                    "arn:aws:dynamodb:us-east-2:760895899467:table/Appointments-dev/index/insuredId-index"
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "sns:Publish"
                  ],
                  "Resource": {
                    "Ref": "AppointmentRequestsTopic"
                  }
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "sqs:ReceiveMessage",
                    "sqs:DeleteMessage"
                  ],
                  "Resource": {
                    "Fn::GetAtt": [
                      "EventConfirmationQueue",
                      "Arn"
                    ]
                  }
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "events:PutEvents"
                  ],
                  "Resource": {
                    "Fn::Join": [
                      ":",
                      [
                        "arn:aws:events",
                        "us-east-2",
                        "760895899467",
                        "event-bus/default"
                      ]
                    ]
                  }
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "sqs:ReceiveMessage",
                    "sqs:DeleteMessage",
                    "sqs:GetQueueAttributes"
                  ],
                  "Resource": [
                    {
                      "Fn::GetAtt": [
                        "EventConfirmationQueue",
                        "Arn"
                      ]
                    },
                    {
                      "Fn::GetAtt": [
                        "SQSPEQueue",
                        "Arn"
                      ]
                    },
                    {
                      "Fn::GetAtt": [
                        "SQSCLQueue",
                        "Arn"
                      ]
                    }
                  ]
                }
              ]
            }
          }
        ],
        "Path": "/",
        "RoleName": {
          "Fn::Join": [
            "-",
            [
              "agendamiento-medico-rimac",
              "dev",
              {
                "Ref": "AWS::Region"
              },
              "lambdaRole"
            ]
          ]
        }
      }
    },
    "AppointmentLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/agendamiento-medico-rimac/dev/1758173631919-2025-09-18T05:33:51.919Z/agendamiento-medico-rimac.zip"
        },
        "Handler": "src/handlers/appointment.handler",
        "Runtime": "nodejs18.x",
        "FunctionName": "agendamiento-medico-rimac-dev-appointment",
        "MemorySize": 1024,
        "Timeout": 6,
        "Environment": {
          "Variables": {
            "DYNAMODB_TABLE": "Appointments-dev",
            "SNS_TOPIC_ARN": {
              "Ref": "AppointmentRequestsTopic"
            },
            "EVENT_BRIDGE_SOURCE": "custom.appointment",
            "RDS_HOST_PE": "rimacreto.cnamg2000cqy.us-east-2.rds.amazonaws.com",
            "RDS_USER_PE": "admin",
            "RDS_PASSWORD_PE": "Unodostres123",
            "RDS_DATABASE_PE": "RimacDB",
            "RDS_HOST_CL": "rimacreto.cnamg2000cqy.us-east-2.rds.amazonaws.com",
            "RDS_USER_CL": "admin",
            "RDS_PASSWORD_CL": "Unodostres123",
            "RDS_DATABASE_CL": "RimacDB"
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "AppointmentLogGroup"
      ]
    },
    "AppointmentUnderscorepeLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/agendamiento-medico-rimac/dev/1758173631919-2025-09-18T05:33:51.919Z/agendamiento-medico-rimac.zip"
        },
        "Handler": "src/handlers/appointment_pe.handler",
        "Runtime": "nodejs18.x",
        "FunctionName": "agendamiento-medico-rimac-dev-appointment_pe",
        "MemorySize": 1024,
        "Timeout": 6,
        "Environment": {
          "Variables": {
            "DYNAMODB_TABLE": "Appointments-dev",
            "SNS_TOPIC_ARN": {
              "Ref": "AppointmentRequestsTopic"
            },
            "EVENT_BRIDGE_SOURCE": "custom.appointment",
            "RDS_HOST_PE": "rimacreto.cnamg2000cqy.us-east-2.rds.amazonaws.com",
            "RDS_USER_PE": "admin",
            "RDS_PASSWORD_PE": "Unodostres123",
            "RDS_DATABASE_PE": "RimacDB",
            "RDS_HOST_CL": "rimacreto.cnamg2000cqy.us-east-2.rds.amazonaws.com",
            "RDS_USER_CL": "admin",
            "RDS_PASSWORD_CL": "Unodostres123",
            "RDS_DATABASE_CL": "RimacDB"
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "AppointmentUnderscorepeLogGroup"
      ]
    },
    "AppointmentUnderscoreclLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/agendamiento-medico-rimac/dev/1758173631919-2025-09-18T05:33:51.919Z/agendamiento-medico-rimac.zip"
        },
        "Handler": "src/handlers/appointment_cl.handler",
        "Runtime": "nodejs18.x",
        "FunctionName": "agendamiento-medico-rimac-dev-appointment_cl",
        "MemorySize": 1024,
        "Timeout": 6,
        "Environment": {
          "Variables": {
            "DYNAMODB_TABLE": "Appointments-dev",
            "SNS_TOPIC_ARN": {
              "Ref": "AppointmentRequestsTopic"
            },
            "EVENT_BRIDGE_SOURCE": "custom.appointment",
            "RDS_HOST_PE": "rimacreto.cnamg2000cqy.us-east-2.rds.amazonaws.com",
            "RDS_USER_PE": "admin",
            "RDS_PASSWORD_PE": "Unodostres123",
            "RDS_DATABASE_PE": "RimacDB",
            "RDS_HOST_CL": "rimacreto.cnamg2000cqy.us-east-2.rds.amazonaws.com",
            "RDS_USER_CL": "admin",
            "RDS_PASSWORD_CL": "Unodostres123",
            "RDS_DATABASE_CL": "RimacDB"
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "AppointmentUnderscoreclLogGroup"
      ]
    },
    "AppointmentLambdaVersionBXH1R4vdTvrJi0zJqNIx3W3mxBzsExQN5q1Jaatno": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "AppointmentLambdaFunction"
        },
        "CodeSha256": "6IESnBgLKR1WFxlgOO5fGqwWw/OjgNlnqFt+fgzWYUA="
      }
    },
    "AppointmentUnderscorepeLambdaVersionbfRG13AZOraCDnZ39aDfVI3iuomjPJNWM2H0xvkU5s": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "AppointmentUnderscorepeLambdaFunction"
        },
        "CodeSha256": "6IESnBgLKR1WFxlgOO5fGqwWw/OjgNlnqFt+fgzWYUA="
      }
    },
    "AppointmentUnderscoreclLambdaVersionobmtm2QsTn4PT2ci8joxukVh3jnVIqLJHjp2FF8gY": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "AppointmentUnderscoreclLambdaFunction"
        },
        "CodeSha256": "6IESnBgLKR1WFxlgOO5fGqwWw/OjgNlnqFt+fgzWYUA="
      }
    },
    "ApiGatewayRestApi": {
      "Type": "AWS::ApiGateway::RestApi",
      "Properties": {
        "Name": "dev-agendamiento-medico-rimac",
        "EndpointConfiguration": {
          "Types": [
            "EDGE"
          ]
        },
        "Policy": ""
      }
    },
    "ApiGatewayResourceAppointments": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "ApiGatewayRestApi",
            "RootResourceId"
          ]
        },
        "PathPart": "appointments",
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      }
    },
    "ApiGatewayResourceAppointmentsInsuredidVar": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Ref": "ApiGatewayResourceAppointments"
        },
        "PathPart": "{insuredId}",
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      }
    },
    "ApiGatewayMethodAppointmentsPost": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "POST",
        "RequestParameters": {},
        "ResourceId": {
          "Ref": "ApiGatewayResourceAppointments"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "AppointmentLambdaFunction",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": []
      },
      "DependsOn": [
        "AppointmentLambdaPermissionApiGateway"
      ]
    },
    "ApiGatewayMethodAppointmentsInsuredidVarGet": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "GET",
        "RequestParameters": {},
        "ResourceId": {
          "Ref": "ApiGatewayResourceAppointmentsInsuredidVar"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "AppointmentLambdaFunction",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": []
      },
      "DependsOn": [
        "AppointmentLambdaPermissionApiGateway"
      ]
    },
    "ApiGatewayDeployment1758173600631": {
      "Type": "AWS::ApiGateway::Deployment",
      "Properties": {
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "StageName": "dev"
      },
      "DependsOn": [
        "ApiGatewayMethodAppointmentsPost",
        "ApiGatewayMethodAppointmentsInsuredidVarGet"
      ]
    },
    "AppointmentLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "AppointmentLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApi"
              },
              "/*/*"
            ]
          ]
        }
      }
    },
    "AppointmentEventSourceMappingSQSEventConfirmationQueue": {
      "Type": "AWS::Lambda::EventSourceMapping",
      "DependsOn": [
        "IamRoleLambdaExecution"
      ],
      "Properties": {
        "BatchSize": 1,
        "EventSourceArn": {
          "Fn::GetAtt": [
            "EventConfirmationQueue",
            "Arn"
          ]
        },
        "FunctionName": {
          "Fn::GetAtt": [
            "AppointmentLambdaFunction",
            "Arn"
          ]
        },
        "Enabled": true
      }
    },
    "AppointmentUnderscorepeEventSourceMappingSQSSQSPEQueue": {
      "Type": "AWS::Lambda::EventSourceMapping",
      "DependsOn": [
        "IamRoleLambdaExecution"
      ],
      "Properties": {
        "BatchSize": 1,
        "EventSourceArn": {
          "Fn::GetAtt": [
            "SQSPEQueue",
            "Arn"
          ]
        },
        "FunctionName": {
          "Fn::GetAtt": [
            "AppointmentUnderscorepeLambdaFunction",
            "Arn"
          ]
        },
        "Enabled": true
      }
    },
    "AppointmentUnderscoreclEventSourceMappingSQSSQSCLQueue": {
      "Type": "AWS::Lambda::EventSourceMapping",
      "DependsOn": [
        "IamRoleLambdaExecution"
      ],
      "Properties": {
        "BatchSize": 1,
        "EventSourceArn": {
          "Fn::GetAtt": [
            "SQSCLQueue",
            "Arn"
          ]
        },
        "FunctionName": {
          "Fn::GetAtt": [
            "AppointmentUnderscoreclLambdaFunction",
            "Arn"
          ]
        },
        "Enabled": true
      }
    },
    "AppointmentsTable": {
      "Type": "AWS::DynamoDB::Table",
      "Properties": {
        "TableName": "Appointments-dev",
        "AttributeDefinitions": [
          {
            "AttributeName": "id",
            "AttributeType": "S"
          },
          {
            "AttributeName": "insuredId",
            "AttributeType": "S"
          }
        ],
        "KeySchema": [
          {
            "AttributeName": "id",
            "KeyType": "HASH"
          }
        ],
        "ProvisionedThroughput": {
          "ReadCapacityUnits": 1,
          "WriteCapacityUnits": 1
        },
        "GlobalSecondaryIndexes": [
          {
            "IndexName": "insuredId-index",
            "KeySchema": [
              {
                "AttributeName": "insuredId",
                "KeyType": "HASH"
              }
            ],
            "Projection": {
              "ProjectionType": "ALL"
            },
            "ProvisionedThroughput": {
              "ReadCapacityUnits": 1,
              "WriteCapacityUnits": 1
            }
          }
        ]
      }
    },
    "AppointmentRequestsTopic": {
      "Type": "AWS::SNS::Topic",
      "Properties": {
        "TopicName": "appointment-requests-dev"
      }
    },
    "SQSPEQueue": {
      "Type": "AWS::SQS::Queue",
      "Properties": {
        "QueueName": "SQS_PE-dev"
      }
    },
    "SQSCLQueue": {
      "Type": "AWS::SQS::Queue",
      "Properties": {
        "QueueName": "SQS_CL-dev"
      }
    },
    "EventConfirmationQueue": {
      "Type": "AWS::SQS::Queue",
      "Properties": {
        "QueueName": "event-confirmation-queue-dev"
      }
    },
    "SQSPEQueueSubscription": {
      "Type": "AWS::SNS::Subscription",
      "Properties": {
        "Endpoint": {
          "Fn::GetAtt": [
            "SQSPEQueue",
            "Arn"
          ]
        },
        "Protocol": "sqs",
        "TopicArn": {
          "Ref": "AppointmentRequestsTopic"
        },
        "FilterPolicy": {
          "countryISO": [
            "PE"
          ]
        }
      }
    },
    "SQSCLQueueSubscription": {
      "Type": "AWS::SNS::Subscription",
      "Properties": {
        "Endpoint": {
          "Fn::GetAtt": [
            "SQSCLQueue",
            "Arn"
          ]
        },
        "Protocol": "sqs",
        "TopicArn": {
          "Ref": "AppointmentRequestsTopic"
        },
        "FilterPolicy": {
          "countryISO": [
            "CL"
          ]
        }
      }
    },
    "EventBridgeRule": {
      "Type": "AWS::Events::Rule",
      "Properties": {
        "EventBusName": "default",
        "EventPattern": {
          "source": [
            "custom.appointment"
          ]
        },
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "EventConfirmationQueue",
                "Arn"
              ]
            },
            "Id": "SQSConfirmationQueue",
            "InputTransformer": {
              "InputTemplate": "{\"body\": <aws.events.detail>}"
            }
          }
        ]
      }
    }
  },
  "Outputs": {
    "ServerlessDeploymentBucketName": {
      "Value": {
        "Ref": "ServerlessDeploymentBucket"
      },
      "Export": {
        "Name": "sls-agendamiento-medico-rimac-dev-ServerlessDeploymentBucketName"
      }
    },
    "AppointmentLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "AppointmentLambdaVersionBXH1R4vdTvrJi0zJqNIx3W3mxBzsExQN5q1Jaatno"
      },
      "Export": {
        "Name": "sls-agendamiento-medico-rimac-dev-AppointmentLambdaFunctionQualifiedArn"
      }
    },
    "AppointmentUnderscorepeLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "AppointmentUnderscorepeLambdaVersionbfRG13AZOraCDnZ39aDfVI3iuomjPJNWM2H0xvkU5s"
      },
      "Export": {
        "Name": "sls-agendamiento-medico-rimac-dev-AppointmentUnderscorepeLambdaFunctionQualifiedArn"
      }
    },
    "AppointmentUnderscoreclLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "AppointmentUnderscoreclLambdaVersionobmtm2QsTn4PT2ci8joxukVh3jnVIqLJHjp2FF8gY"
      },
      "Export": {
        "Name": "sls-agendamiento-medico-rimac-dev-AppointmentUnderscoreclLambdaFunctionQualifiedArn"
      }
    },
    "ServiceEndpoint": {
      "Description": "URL of the service endpoint",
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Ref": "ApiGatewayRestApi"
            },
            ".execute-api.",
            {
              "Ref": "AWS::Region"
            },
            ".",
            {
              "Ref": "AWS::URLSuffix"
            },
            "/dev"
          ]
        ]
      },
      "Export": {
        "Name": "sls-agendamiento-medico-rimac-dev-ServiceEndpoint"
      }
    }
  }
}